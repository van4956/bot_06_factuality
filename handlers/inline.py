import logging

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–æ–≥–≥–µ—Ä –º–æ–¥—É–ª—è
logger = logging.getLogger(__name__)
logger.setLevel(logging.INFO)
logger.info("–ó–∞–≥—Ä—É–∂–µ–Ω –º–æ–¥—É–ª—å: %s", __name__)

from typing import Sequence
from aiogram import F, Router
from aiogram.types import InlineQuery, InlineQueryResultArticle, InputTextMessageContent

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –∏–Ω–ª–∞–π–Ω-—Ä–µ–∂–∏–º–∞
inline_router = Router()

"""–î–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –∏–Ω–ª–∞–π–Ω-—Ä–µ–∂–∏–º–∞ —É –±–æ—Ç–∞ –Ω—É–∂–Ω–æ, –≤–∫–ª—é—á–∏—Ç—å –∏–Ω–ª–∞–π–Ω-—Ä–µ–∂–∏–º —á–µ—Ä–µ–∑ BotFather:
1. –ù–∞–π—Ç–∏ @BotFather –≤ Telegram
2. –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É /mybots
3. –í—ã–±—Ä–∞—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –±–æ—Ç–∞
4. –í—ã–±—Ä–∞—Ç—å "Bot Settings"
5. –í—ã–±—Ä–∞—Ç—å "Inline Mode"
6. –í–∫–ª—é—á–∏—Ç—å –∏–Ω–ª–∞–π–Ω-—Ä–µ–∂–∏–º ("Turn on")
7. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ placeholder text (—Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞)"""

@inline_router.inline_query()
async def handle_inline_query(inline_query: InlineQuery, workflow_data: dict):
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–Ω–ª–∞–π–Ω-–∑–∞–ø—Ä–æ—Å–∞
    results: Sequence[InlineQueryResultArticle] = [
        InlineQueryResultArticle(
            id="1",
            title="Factuality Test",
            description="Test your understanding of global trends",
            input_message_content=InputTextMessageContent(
                message_text="üåç Factuality Test\n\n"
                            "A test from the book 'Factuality' by Hans Rosling.\n"
                            "Check how accurately you perceive world trends.\n\n"
                            "Try: @factuality_test_bot"
            )
        )
    ]
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    await inline_query.answer(results, cache_time=300) # type: ignore

    user_id = inline_query.from_user.id
    analytics = workflow_data['analytics']
    await analytics(user_id=user_id,
                category_name="/start",
                command_name="/inline")
